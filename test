#!/usr/bin/python3
from asciimatics.effects import Print
from asciimatics.renderers import BarChart
from asciimatics.scene import Scene
from asciimatics.screen import Screen
from asciimatics.exceptions import ResizeScreenError, StopApplication
import sys
from random import randint

# Simple progress indicator - from 0 to 100
progress = 0


def get_progress():
    global progress
    if randint(0, 100) > 10:
        progress += 1
    return progress


class ProgressBar(Print):
    def __init__(self, screen):
        super(ProgressBar, self).__init__(
            screen,
            BarChart(
                7, 60, [get_progress],
                char=">",
                scale=100.0,
                labels=True,
                axes=BarChart.X_AXIS),
            x=(screen.width - 60) // 2,
            y=(screen.height - 7) // 2,
            transparent=False, speed=2)

    def _update(self, frame_no):
        global progress
        if progress >= 100:
            raise StopApplication("100% complete")
        else:
            super(ProgressBar, self)._update(frame_no)


def demo(screen):
    scenes = []
    effects = [
        ProgressBar(screen)
    ]
    scenes.append(Scene(effects, -1))
    screen.play(scenes, stop_on_resize=True)

while True:
    try:
        Screen.wrapper(demo)
        sys.exit(0)
    except ResizeScreenError:
        pass
