#!/usr/bin/python3
from asciimatics.widgets import Frame, ListBox, Layout, Divider, Text, Button, TextBox, Widget
from asciimatics.scene import Scene
from asciimatics.screen import Screen
from asciimatics.exceptions import ResizeScreenError, NextScene, StopApplication
import sys
import os

class View(Frame):
    def __init__(self, screen, number):
        super(View, self).__init__(screen,
                                   screen.height * 2 // 3,
                                   screen.width * 2 // 3,
                                   on_load=None,
                                   hover_focus=True,
                                   title="Flash Loader")

        self.number = number
        layout = Layout([100], fill_frame=True)
        self.add_layout(layout)
        layout2 = Layout([1, 1])
        self.add_layout(layout2)

        if number == "0":
            layout2.add_widget(Button("Quit", self._quit), 0)
            layout2.add_widget(Button("Start", self._next), 1)
        else:
            layout2.add_widget(Button("Prev", self._prev), 0)
            layout2.add_widget(Button("Next", self._next), 1)
            d = os.listdir("/srv/ftp/images")
            l = []
            for i, x in enumerate(d):
                l.append((x,i))
            self._list_view = ListBox(Widget.FILL_FRAME, l, name=self.number, on_change=None)
            layout.add_widget(self._list_view)
    
        layout.add_widget(Divider())
        self.fix()

    def _next(self):
        raise NextScene(str(int(self.number)+1))

    def _prev(self):
        raise NextScene(str(int(self.number)-1))

    @staticmethod
    def _quit():
        raise StopApplication("User pressed quit")

def loader(screen, scene):
    scenes = []
    for i in range(3):
        scenes.append(Scene([View(screen, str(i))], -1, name=str(i)))
            
    screen.play(scenes, stop_on_resize=True, start_scene=scene)

last_scene = None
while True:
    try:
        Screen.wrapper(loader, catch_interrupt=True, arguments=[last_scene])
        sys.exit(0)
    except ResizeScreenError as e:
        last_scene = e.scene
